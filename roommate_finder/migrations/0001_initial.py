# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-22 01:23
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.geos.point
from django.db import migrations, models
import django.db.models.deletion
import location_field.models.spatial


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField()),
                ('gender', models.CharField(max_length=20)),
                ('location', location_field.models.spatial.LocationField(default=django.contrib.gis.geos.point.Point(1.0, 1.0), srid=4326)),
                ('food_pref', models.CharField(max_length=20)),
                ('occupation', models.CharField(max_length=30)),
                ('organisation', models.CharField(max_length=50)),
                ('about_me', models.CharField(max_length=500)),
                ('nationality', models.CharField(max_length=30)),
                ('languages', models.CharField(max_length=100)),
                ('roommate_gender_pref', models.CharField(max_length=20)),
                ('interests', models.CharField(max_length=100)),
                ('photo', models.ImageField(height_field=32, upload_to=b'', width_field=32)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Scores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('question_id', models.IntegerField()),
                ('score', models.IntegerField()),
            ],
        ),
    ]
